env:
    global:
        - REPO_DIR=biopython
        # Commit from your-project that you want to build
        # biopython-177 (not yet tagged):
        - BUILD_COMMIT=adac231c9b1470a7f8036876d5d02959554c1bbb
        - PLAT=x86_64
        - UNICODE_WIDTH=32

language: python
python: 3.6
os: linux
dist: trusty
services: docker

jobs:
  include:
      # add osx first into the queue as they have lower parallelism
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6
        - TEST_DEPENDS="numpy==1.12.0"
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.7
        - TEST_DEPENDS="numpy==1.14.5"
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.8
        - TEST_DEPENDS="numpy==1.17.3"
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - TEST_DEPENDS="numpy==1.12.0"
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
        - TEST_DEPENDS="numpy==1.12.0"
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - TEST_DEPENDS="numpy==1.14.5"
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=i686
        - TEST_DEPENDS="numpy==1.14.5"
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
        - TEST_DEPENDS="numpy==1.17.3"
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=i686
        - TEST_DEPENDS="numpy==1.17.3"

before_install:
    - BUILD_DEPENDS="wheel"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    - echo "TODO - upload wheels to staging area..."
